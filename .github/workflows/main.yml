on: push
name: Clippy check
jobs:
  clippy_check:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --target=x86_64-unknown-linux-musl
          use-cross: true
  rustmt_check:
    name: Code Style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-musl
          - x86_64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v1
        name: Clone
      - uses: actions-rs/toolchain@v1
        name: Setup toolchain
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        name: Build
        with:
          use-cross: true
          command: build
          args: --release --all-features --target=${{ matrix.target }}

      # Env setup!
      - name: Configure packaging name for git master branch
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          echo "release_tag=git`date +%Y%m%d`" >> $GITHUB_ENV
          echo "release_name=preview" >> $GITHUB_ENV
      - name: Configure packaging name for tag
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo "release_tag=`basename $GITHUB_REF`" >> $GITHUB_ENV
          echo "release_name=`basename $GITHUB_REF`" >> $GITHUB_ENV
      - name: Configure packaging name for non-releasing branch
        if: ${{ (github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/')) || github.repository_owner != 'ComputerScienceHouse' }}
        run: |
          echo "release_tag=" >> $GITHUB_ENV
          echo "release_name=" >> $GITHUB_ENV
      - name: Check for prerelease
        if: ${{ github.ref == 'refs/heads/master' || contains(github.ref, 'rc') || contains(github.ref, 'beta') }}
        run: |
          echo "release_pre=true" >> $GITHUB_ENV
      - name: Check for non-prerelease
        if: ${{ github.ref != 'refs/heads/master' && !contains(github.ref, 'rc') && !contains(github.ref, 'beta') }}
        run: |
          echo "release_pre=false" >> $GITHUB_ENV
      - name: Show packaging name
        run : |
          echo "${{ env.release_tag }}"
          echo "${{ env.release_name }}"
          echo "${{ env.release_pre }}"

      - name: Create Release
        if: ${{ env.release_tag != '' }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "target/${{ matrix.target }}/release/clink"
          tag: ${{ env.release_tag }}
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          allowUpdates: true
          prerelease: ${{ env.release_pre }}
